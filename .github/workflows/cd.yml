name: EC2 deploy from docker

on:
  push:
    branches: ["QA"]
  pull_request:
    branches: ["Production"]

jobs:
  login-and-pull-qa:
    if: github.ref == 'refs/heads/QA'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/webpage:${{ github.sha }}

  ssh-connect-ec2QA01:
    needs: [login-and-pull-qa]
    if: github.ref == 'refs/heads/QA'
    runs-on: ubuntu-latest
    steps:
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST_QA }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY_QA }}
          script: |
            # Instalar y configurar Docker si no está disponible
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install docker.io -y
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
              newgrp docker
            fi

            # Asegurarse de que Docker está activo
            if ! sudo systemctl is-active --quiet docker; then
              sudo systemctl start docker
            fi

            # Descargar la nueva imagen
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/webpage:${{ github.sha }}

            # Detener y eliminar el contenedor en ejecución
            CONTAINER_ID=$(sudo docker ps -q --filter "name=webpage")
            if [ -n "$CONTAINER_ID" ]; then
              sudo docker stop $CONTAINER_ID
              sudo docker rm $CONTAINER_ID
            fi

            # Ejecutar el nuevo contenedor
            sudo docker run -d -p 5000:5000 --name webpage ${{ secrets.DOCKER_USERNAME }}/webpage:${{ github.sha }}
