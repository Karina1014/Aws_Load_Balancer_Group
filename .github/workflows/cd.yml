name: EC2 deploy from docker

on:
  push:
    branches: ["QA"]
  pull_request:
    branches: ["main"]

jobs:
  login-and-pull-qa:
    if: github.ref == 'refs/heads/QA'
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Iniciar sesiÃ³n en Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 3: Construir y empujar la imagen a Docker Hub
      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/webpage:${{ github.sha }}

  pull-main:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image to Production
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/webpage:prod-latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/webpage:prod-latest

  ssh-connect-ec2QA01:
    if: github.ref == 'refs/heads/QA'
    runs-on: ubuntu-latest
    needs: [login-and-pull-qa]
    steps:
      - name: SSH into EC2 and pull the latest Docker image
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST_QA }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY_QA }}
          script: |
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
              sudo systemctl restart docker
            else
              echo "Docker is already installed"
            fi
            
            if ! sudo systemctl is-active --quiet docker; then
              sudo systemctl start docker
            fi

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/qa:latest
            sudo docker stop $(docker ps -q) || true
            sudo docker run -d -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/qa:latest
