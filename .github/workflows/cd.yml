name: Build and Deploy Docker to EC2

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["QA"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Iniciar sesiÃ³n en Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 3: Construir y empujar la imagen a Docker Hub
      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/webpage:${{ github.sha }}

  deploy-to-ec2:
    if: github.ref == 'refs/heads/QA'
    runs-on: ubuntu-latest
    needs: [build-and-push]

    steps:
      # Paso 4: Conectar a la instancia EC2 y actualizar el contenedor
      - name: SSH into EC2 and pull the latest Docker image
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi
            
            sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/webpage:${{ github.sha }}
            sudo docker stop webpage || true
            sudo docker rm webpage || true
            sudo docker run -d --name webpage -p 80:80 ${{ secrets.DOCKER_USERNAME }}/webpage:${{ github.sha }}
